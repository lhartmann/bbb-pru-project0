#! /bin/bash
# This table is on the reference manual
REGLIST="\
0h	QPOSCNT	4
4h	QPOSINIT	4
8h	QPOSMAX	4
Ch	QPOSCMP	4
10h	QPOSILAT	4
14h	QPOSSLAT	4
18h	QPOSLAT	4
1Ch	QUTMR	4
20h	QUPRD	4
24h	QWDTMR	2
26h	QWDPRD	2
28h	QDECCTL	2
2Ah	QEPCTL	2
2Ch	QCAPCTL	2
2Eh	QPOSCTL	2
30h	QEINT	2
32h	QFLG	2
34h	QCLR	2
36h	QFRC	2
38h	QEPSTS	2
3Ah	QCTMR	2
3Ch	QCPRD	2
3Eh	QCTMRLAT	2
40h	QCPRDLAT	2
5Ch	REVID	4"

(
	echo "// This file is automatically generated by aux/PWMSS_REGS.sh"
	echo "#ifndef FILIPEBELO_PWMSS_EQEP_H"
	echo "#define FILIPEBELO_PWMSS_EQEP_H"
	echo ""
	echo "#include \"PWMSS_EQEP_bitfields.h\""
	echo ""
	
	echo "$REGLIST" | while read ADDR NAME SIZE; do
		echo "#define PWMSS_EQEP_OFFSET_$NAME 0x${ADDR%h}u"
	done
	echo ""
	
	POS=0
	echo "struct pwmss_eqep_regs_t {"
	echo "$REGLIST" | while read ADDR NAME SIZE; do
		OFF=$(( 0x${ADDR%h} ))
		if [[ $OFF != $POS ]]; then
			echo -e "\tuint8_t _rsvd_${POS}[$(( OFF-POS ))];"
		fi
		if grep -q "$NAME" < PWMSS_EQEP_bitfields.h; then
			echo -e "\tpwmss_eqep_${NAME}_reg_t $NAME;"
		else
			if   [ $SIZE -eq 4 ]; then
				echo -e "\tuint32_t $NAME;"
			elif [ $SIZE -eq 2 ]; then
				echo -e "\tuint16_t $NAME;"
			else
				echo "ERROR" >&2
				exit 1
			fi
		fi
		POS=$((OFF+$SIZE));
	done
	echo "};"
	echo ""
	echo "#endif"
) > pwmss_eqep.h

# Test function code
(
	echo "// This file is automatically generated by aux/PWMSS_EQEP.sh"
	echo "#ifndef FILIPEBELO_PWMSS_EQEP_OFFSET_TEST_H"
	echo "#define FILIPEBELO_PWMSS_EQEP_OFFSET_TEST_H"
	echo ""
	echo "#include \"pwmss_eqep.h\""
	echo ""
	echo '#define fail(XXX) { \'
	echo '	cerr << hex << "Failed offset for " #XXX ". Expected 0x" << PWMSS_EQEP_OFFSET_##XXX << ", got 0x" << ((uint8_t*)&eqep. XXX - (uint8_t*)&eqep) << "." << endl << dec; \'
	echo '}'

	echo "bool test_pwmss_eqep_offsets() {"
	echo -e "\tpwmss_eqep_regs_t eqep;"
	echo -e "\t bool err = false;"
	echo "$REGLIST" | while read ADDR NAME SIZE; do
		echo -e "\tif ((uint8_t*)&eqep.$NAME - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_$NAME) {"
		echo -e "\t\tfail($NAME);"
		echo -e "\t\terr = true;"
		echo -e "\t}"
	done
	echo -e "\treturn err;"
	echo "}"
	echo ""
	echo "#endif"
) > pwmss_eqep_test.h
