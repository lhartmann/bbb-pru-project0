#! /bin/bash
# This table is on the reference manual
REGLIST="\
0h	IDVER
4h	SYSCONFIG
8h	CLKCONFIG
Ch	CLKSTATUS"

(
	echo "// This file is automatically generated by aux/PWMSS_REGS.sh"
	echo "#ifndef FILIPEBELO_PWMSS_H"
	echo "#define FILIPEBELO_PWMSS_H"
	echo ""
	echo "#include \"PWMSS_bitfields.h\""
	echo ""
	
	echo "$REGLIST" | while read ADDR NAME; do
		echo "#define PWMSS_OFFSET_$NAME 0x${ADDR%h}u"
	done
	echo ""
	
	POS=0
	echo "struct pwmss_regs_t {"
	echo "$REGLIST" | while read ADDR NAME; do
		OFF=$(( 0x${ADDR%h} ))
		if [[ $OFF != $POS ]]; then
			echo -e "\tuint8_t _rsvd_${POS}[$(( OFF-POS ))];"
		fi
		if grep -q "$NAME" < PWMSS_bitfields.h; then
			echo -e "\tpwmss_${NAME}_reg_t $NAME;"
		else 
			echo -e "\tuint32_t $NAME;"
		fi
		POS=$((OFF+4));
	done
	echo "};"
	echo ""
	echo "#endif"
) > pwmss.h

# Test function code
(
	echo "// This file is automatically generated by aux/PWMSS_REGS.sh"
	echo "#ifndef FILIPEBELO_PWMSS_OFFSET_TEST_H"
	echo "#define FILIPEBELO_PWMSS_OFFSET_TEST_H"
	echo ""
	echo "#include \"pwmss.h\""
	echo ""
	echo '#define fail(XXX) { \'
	echo '	cerr << hex << "Failed offset for " #XXX ". Expected 0x" << PWMSS_OFFSET_##XXX << ", got 0x" << ((uint8_t*)&pwm. XXX - (uint8_t*)&pwm) << "." << endl << dec; \'
	echo '}'

	echo "bool test_pwmss_offsets() {"
	echo -e "\tpwmss_regs_t pwm;"
	echo -e "\t bool err = false;"
	echo "$REGLIST" | while read ADDR NAME; do
		echo -e "\tif ((uint8_t*)&pwm.$NAME - (uint8_t*)&pwm != PWMSS_OFFSET_$NAME) {"
		echo -e "\t\tfail($NAME);"
		echo -e "\t\terr = true;"
		echo -e "\t}"
	done
	echo -e "\treturn err;"
	echo "}"
	echo ""
	echo "#endif"
) > pwmss_test.h
