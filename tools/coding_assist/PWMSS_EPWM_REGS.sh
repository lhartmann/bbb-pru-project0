#! /bin/bash
# This table is on the reference manual
REGLIST="\
0h	TBCTL
2h	TBSTS
4h	TBPHSHR
6h	TBPHS
8h	TBCNT
Ah	TBPRD
Eh	CMPCTL
10h	CMPAHR
12h	CMPA
14h	CMPB
16h	AQCTLA
18h	AQCTLB
1Ah	AQSFRC
1Ch	AQCSFRC
1Eh	DBCTL
20h	DBRED
22h	DBFED
24h	TZSEL
28h	TZCTL
2Ah	TZEINT
2Ch	TZFLG
2Eh	TZCLR
30h	TZFRC
32h	ETSEL
34h	ETPS
36h	ETFLG
38h	ETCLR
3Ah	ETFRC
3Ch	PCCTL
40h	HRCTL"

(
	echo "// This file is automatically generated by aux/PWMSS_REGS.sh"
	echo "#ifndef FILIPEBELO_PWMSS_EPWM_H"
	echo "#define FILIPEBELO_PWMSS_EPWM_H"
	echo ""
	echo "#include \"PWMSS_EPWM_bitfields.h\""
	echo ""
	
	echo "$REGLIST" | while read ADDR NAME; do
		echo "#define PWMSS_EPWM_OFFSET_$NAME 0x${ADDR%h}u"
	done
	echo ""
	
	POS=0
	echo "struct pwmss_epwm_regs_t {"
	echo "$REGLIST" | while read ADDR NAME; do
		OFF=$(( 0x${ADDR%h} ))
		if [[ $OFF != $POS ]]; then
			echo -e "\tuint8_t _rsvd_${POS}[$(( OFF-POS ))];"
		fi
		if grep -q "$NAME" < PWMSS_EPWM_bitfields.h; then
			echo -e "\tpwmss_epwm_${NAME}_reg_t $NAME;"
		else 
			echo -e "\tuint16_t $NAME;"
		fi
		POS=$((OFF+2));
	done
	echo "};"
	echo ""
	echo "#endif"
) > pwmss_epwm.h

# Test function code
(
	echo "// This file is automatically generated by aux/PWMSS.sh"
	echo "#ifndef FILIPEBELO_PWMSS_OFFSET_TEST_H"
	echo "#define FILIPEBELO_PWMSS_OFFSET_TEST_H"
	echo ""
	echo "#include \"pwmss_epwm.h\""
	echo ""
	echo '#define fail(XXX) { \'
	echo '	cerr << hex << "Failed offset for " #XXX ". Expected 0x" << PWMSS_EPWM_OFFSET_##XXX << ", got 0x" << ((uint8_t*)&epwm. XXX - (uint8_t*)&epwm) << "." << endl << dec; \'
	echo '}'

	echo "bool test_pwmss_epwm_offsets() {"
	echo -e "\tpwmss_regs_t epwm;"
	echo -e "\t bool err = false;"
	echo "$REGLIST" | while read ADDR NAME; do
		echo -e "\tif ((uint8_t*)&pwmss_epwm.$NAME - (uint8_t*)&pwmss_epwm != PWMSS_EPWM_OFFSET_$NAME) {"
		echo -e "\t\tfail($NAME);"
		echo -e "\t\terr = true;"
		echo -e "\t}"
	done
	echo -e "\treturn err;"
	echo "}"
	echo ""
	echo "#endif"
) > pwmss_epwm_test.h
