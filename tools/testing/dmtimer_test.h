// This file is automatically generated by tools/coding_assist/DMTIMER.sh
#ifndef LHARTMANN_DMTIMER_OFFSET_TEST_H
#define LHARTMANN_DMTIMER_OFFSET_TEST_H

#include "dmtimer_structs.h"

#define fail(XXX) { \
	cerr << hex << "Failed offset for " #XXX ". Expected 0x" << DMTIMER_OFFSET_##XXX << ", got 0x" << ((uint8_t*)&dmtimer. XXX - (uint8_t*)&dmtimer) << "." << endl << dec; \
}
bool test_dmtimer_offsets() {
	dmtimer_regs_t dmtimer;
	 bool err = false;
	if ((uint8_t*)&dmtimer.TIDR - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TIDR) {
		fail(TIDR);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TIOCP_CFG - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TIOCP_CFG) {
		fail(TIOCP_CFG);
		err = true;
	}
	if ((uint8_t*)&dmtimer.IRQ_EOI - (uint8_t*)&dmtimer != DMTIMER_OFFSET_IRQ_EOI) {
		fail(IRQ_EOI);
		err = true;
	}
	if ((uint8_t*)&dmtimer.IRQSTATUS_RAW - (uint8_t*)&dmtimer != DMTIMER_OFFSET_IRQSTATUS_RAW) {
		fail(IRQSTATUS_RAW);
		err = true;
	}
	if ((uint8_t*)&dmtimer.IRQSTATUS - (uint8_t*)&dmtimer != DMTIMER_OFFSET_IRQSTATUS) {
		fail(IRQSTATUS);
		err = true;
	}
	if ((uint8_t*)&dmtimer.IRQENABLE_SET - (uint8_t*)&dmtimer != DMTIMER_OFFSET_IRQENABLE_SET) {
		fail(IRQENABLE_SET);
		err = true;
	}
	if ((uint8_t*)&dmtimer.IRQENABLE_CLR - (uint8_t*)&dmtimer != DMTIMER_OFFSET_IRQENABLE_CLR) {
		fail(IRQENABLE_CLR);
		err = true;
	}
	if ((uint8_t*)&dmtimer.IRQWAKEEN - (uint8_t*)&dmtimer != DMTIMER_OFFSET_IRQWAKEEN) {
		fail(IRQWAKEEN);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TCLR - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TCLR) {
		fail(TCLR);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TCRR - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TCRR) {
		fail(TCRR);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TLDR - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TLDR) {
		fail(TLDR);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TTGR - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TTGR) {
		fail(TTGR);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TWPS - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TWPS) {
		fail(TWPS);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TMAR - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TMAR) {
		fail(TMAR);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TCAR1 - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TCAR1) {
		fail(TCAR1);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TSICR - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TSICR) {
		fail(TSICR);
		err = true;
	}
	if ((uint8_t*)&dmtimer.TCAR2 - (uint8_t*)&dmtimer != DMTIMER_OFFSET_TCAR2) {
		fail(TCAR2);
		err = true;
	}
	return err;
}
#undef fail
#endif
