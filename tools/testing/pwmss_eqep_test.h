// This file is automatically generated by aux/PWMSS_EQEP.sh
#ifndef FILIPEBELO_PWMSS_EQEP_OFFSET_TEST_H
#define FILIPEBELO_PWMSS_EQEP_OFFSET_TEST_H

#include "pwmss_eqep.h"

#include <iomanip>
#include <iostream>
using namespace std;

#define fail(XXX) { \
	cerr << hex << "Failed offset for " #XXX ". Expected 0x" << PWMSS_EQEP_OFFSET_##XXX << ", got 0x" << ((uint8_t*)&eqep. XXX - (uint8_t*)&eqep) << "." << endl << dec; \
}
bool test_pwmss_eqep_offsets() {
	pwmss_eqep_regs_t eqep;
	 bool err = false;
	if ((uint8_t*)&eqep.QPOSCNT - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QPOSCNT) {
		fail(QPOSCNT);
		err = true;
	}
	if ((uint8_t*)&eqep.QPOSINIT - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QPOSINIT) {
		fail(QPOSINIT);
		err = true;
	}
	if ((uint8_t*)&eqep.QPOSMAX - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QPOSMAX) {
		fail(QPOSMAX);
		err = true;
	}
	if ((uint8_t*)&eqep.QPOSCMP - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QPOSCMP) {
		fail(QPOSCMP);
		err = true;
	}
	if ((uint8_t*)&eqep.QPOSILAT - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QPOSILAT) {
		fail(QPOSILAT);
		err = true;
	}
	if ((uint8_t*)&eqep.QPOSSLAT - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QPOSSLAT) {
		fail(QPOSSLAT);
		err = true;
	}
	if ((uint8_t*)&eqep.QPOSLAT - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QPOSLAT) {
		fail(QPOSLAT);
		err = true;
	}
	if ((uint8_t*)&eqep.QUTMR - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QUTMR) {
		fail(QUTMR);
		err = true;
	}
	if ((uint8_t*)&eqep.QUPRD - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QUPRD) {
		fail(QUPRD);
		err = true;
	}
	if ((uint8_t*)&eqep.QWDTMR - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QWDTMR) {
		fail(QWDTMR);
		err = true;
	}
	if ((uint8_t*)&eqep.QWDPRD - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QWDPRD) {
		fail(QWDPRD);
		err = true;
	}
	if ((uint8_t*)&eqep.QDECCTL - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QDECCTL) {
		fail(QDECCTL);
		err = true;
	}
	if ((uint8_t*)&eqep.QEPCTL - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QEPCTL) {
		fail(QEPCTL);
		err = true;
	}
	if ((uint8_t*)&eqep.QCAPCTL - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QCAPCTL) {
		fail(QCAPCTL);
		err = true;
	}
	if ((uint8_t*)&eqep.QPOSCTL - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QPOSCTL) {
		fail(QPOSCTL);
		err = true;
	}
	if ((uint8_t*)&eqep.QEINT - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QEINT) {
		fail(QEINT);
		err = true;
	}
	if ((uint8_t*)&eqep.QFLG - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QFLG) {
		fail(QFLG);
		err = true;
	}
	if ((uint8_t*)&eqep.QCLR - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QCLR) {
		fail(QCLR);
		err = true;
	}
	if ((uint8_t*)&eqep.QFRC - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QFRC) {
		fail(QFRC);
		err = true;
	}
	if ((uint8_t*)&eqep.QEPSTS - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QEPSTS) {
		fail(QEPSTS);
		err = true;
	}
	if ((uint8_t*)&eqep.QCTMR - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QCTMR) {
		fail(QCTMR);
		err = true;
	}
	if ((uint8_t*)&eqep.QCPRD - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QCPRD) {
		fail(QCPRD);
		err = true;
	}
	if ((uint8_t*)&eqep.QCTMRLAT - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QCTMRLAT) {
		fail(QCTMRLAT);
		err = true;
	}
	if ((uint8_t*)&eqep.QCPRDLAT - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_QCPRDLAT) {
		fail(QCPRDLAT);
		err = true;
	}
	if ((uint8_t*)&eqep.REVID - (uint8_t*)&eqep != PWMSS_EQEP_OFFSET_REVID) {
		fail(REVID);
		err = true;
	}
	return err;
}
#undef fail

#endif
